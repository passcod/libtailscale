/* automatically generated by rust-bindgen 0.69.2 */

pub type wchar_t = ::std::os::raw::c_int;
#[repr(C)]
#[repr(align(16))]
#[derive(Debug, Copy, Clone)]
pub struct max_align_t {
    pub __clang_max_align_nonce1: ::std::os::raw::c_longlong,
    pub __bindgen_padding_0: u64,
    pub __clang_max_align_nonce2: u128,
}
#[test]
fn bindgen_test_layout_max_align_t() {
    const UNINIT: ::std::mem::MaybeUninit<max_align_t> = ::std::mem::MaybeUninit::uninit();
    let ptr = UNINIT.as_ptr();
    assert_eq!(
        ::std::mem::size_of::<max_align_t>(),
        32usize,
        concat!("Size of: ", stringify!(max_align_t))
    );
    assert_eq!(
        ::std::mem::align_of::<max_align_t>(),
        16usize,
        concat!("Alignment of ", stringify!(max_align_t))
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).__clang_max_align_nonce1) as usize - ptr as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(max_align_t),
            "::",
            stringify!(__clang_max_align_nonce1)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).__clang_max_align_nonce2) as usize - ptr as usize },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(max_align_t),
            "::",
            stringify!(__clang_max_align_nonce2)
        )
    );
}
pub type tailscale = ::std::os::raw::c_int;
extern "C" {
    pub fn tailscale_new() -> tailscale;
}
extern "C" {
    pub fn tailscale_start(sd: tailscale) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn tailscale_up(sd: tailscale) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn tailscale_close(sd: tailscale) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn tailscale_set_dir(
        sd: tailscale,
        dir: *const ::std::os::raw::c_char,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn tailscale_set_hostname(
        sd: tailscale,
        hostname: *const ::std::os::raw::c_char,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn tailscale_set_authkey(
        sd: tailscale,
        authkey: *const ::std::os::raw::c_char,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn tailscale_set_control_url(
        sd: tailscale,
        control_url: *const ::std::os::raw::c_char,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn tailscale_set_ephemeral(
        sd: tailscale,
        ephemeral: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn tailscale_set_logfd(sd: tailscale, fd: ::std::os::raw::c_int) -> ::std::os::raw::c_int;
}
pub type tailscale_conn = ::std::os::raw::c_int;
extern "C" {
    pub fn tailscale_dial(
        sd: tailscale,
        network: *const ::std::os::raw::c_char,
        addr: *const ::std::os::raw::c_char,
        conn_out: *mut tailscale_conn,
    ) -> ::std::os::raw::c_int;
}
pub type tailscale_listener = ::std::os::raw::c_int;
extern "C" {
    pub fn tailscale_listen(
        sd: tailscale,
        network: *const ::std::os::raw::c_char,
        addr: *const ::std::os::raw::c_char,
        listener_out: *mut tailscale_listener,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn tailscale_accept(
        listener: tailscale_listener,
        conn_out: *mut tailscale_conn,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn tailscale_loopback(
        sd: tailscale,
        addr_out: *mut ::std::os::raw::c_char,
        addrlen: usize,
        proxy_cred_out: *mut ::std::os::raw::c_char,
        local_api_cred_out: *mut ::std::os::raw::c_char,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn tailscale_errmsg(
        sd: tailscale,
        buf: *mut ::std::os::raw::c_char,
        buflen: usize,
    ) -> ::std::os::raw::c_int;
}
